#compdef hnetxt

_hnetxt() {
  local context state state_descr line
  typeset -A opt_args

  local -a options=(
    {-h,--help}"[Show this help message and exit]"
  )
  _arguments -s -S \
    $options \
    ": :_hnetxt_cmds" \
    "*:: :->args" \
    && return 0

  case $words[1] in
    quote)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
        {-p,--path}"[dir]: :_files"
      )
      _arguments -s -S \
        $options \
        ": :_files" \
        && return 0
      ;;

    journal)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
      )
      _arguments -s -S \
        $options \
        && return 0
      ;;

    remove)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
        "-r[delete recursively]"
        "-d[delete directories]"
        "-f[force]"
      )
      _arguments -s -S \
        $options \
        ": :_files" \
        && return 0
      ;;

    ety)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
      )
      _arguments -s -S \
        $options \
        ": :_files" \
        && return 0
      ;;

    ontology)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
        {-p,--path}": :_files"
        "-i[include instances]"
        "-I[only print instances]"
        "-a[by attribute]"
        "-t[by tag]"
        "-V[exclude attribute values]"
      )
      _arguments -s -S \
        $options \
        "*: :_files" \
        && return 0
      ;;

    define)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
        {-p,--part-of-speech}"[part of speech (default\: word)]: :_files"
      )
      _arguments -s -S \
        $options \
        "*: :_files" \
        && return 0
      ;;

    clean)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
      )
      _arguments -s -S \
        $options \
        && return 0
      ;;

    persist)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
        "-r[reparse taxonomy]"
      )
      _arguments -s -S \
        $options \
        && return 0
      ;;

    aim)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
      )
      _arguments -s -S \
        $options \
        && return 0
      ;;

    x_of_the_day|x-of-the-day)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
        "-r[rerun]"
      )
      _arguments -s -S \
        $options \
        ": :_files" \
        && return 0
      ;;

    project)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
      )
      _arguments -s -S \
        $options \
        ": :_hnetxt_project_cmds" \
        "*:: :->args" \
        && return 0

      case $words[1] in
        remove)
          options=(
            $options
            {-h,--help}"[Show this help message and exit]"
          )
          _arguments -s -S \
            $options \
            ": :_files" \
            && return 0
          ;;

        add)
          options=(
            $options
            {-h,--help}"[Show this help message and exit]"
            {-p,--path}"[directory (default=cwd)]: :_files"
            {-c,--created}"[start date (default\: 20240924)]: :_files"
          )
          _arguments -s -S \
            $options \
            ": :_files" \
            && return 0
          ;;

      esac
      ;;

    track)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
      )
      _arguments -s -S \
        $options \
        ": :_files" \
        && return 0
      ;;

    move)
      options=(
        $options
        {-h,--help}"[Show this help message and exit]"
      )
      _arguments -s -S \
        $options \
        ": :_files" \
        ": :_files" \
        && return 0
      ;;

  esac

  return 1
}

_hnetxt_cmds() {
  local -a commands=(
    "quote:add a quote"
    "journal:open the journal"
    "remove:remove tracked files"
    "ety:open etymonline to the word"
    "ontology:print the ontology"
    "define:add a word to the dictionary"
    "clean:clean the db"
    "persist:save things used by services"
    "aim:open daily aims"
    {x_of_the_day,x-of-the-day}":set the x-of-the-day files"
    "project"
    "track:open the tracking file"
    "move:move tracked files"
  )
  _describe "command" commands
}

_hnetxt_project_cmds() {
  local -a commands=(
    "remove"
    "add"
  )
  _describe "command" commands
}

_hnetxt
